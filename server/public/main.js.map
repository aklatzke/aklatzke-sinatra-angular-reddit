{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/active-subreddit/active-subreddit.component.css","webpack:///./src/app/active-subreddit/active-subreddit.component.html","webpack:///./src/app/active-subreddit/active-subreddit.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/reddit.service.ts","webpack:///./src/app/subreddit-search/subreddit-search.component.css","webpack:///./src/app/subreddit-search/subreddit-search.component.html","webpack:///./src/app/subreddit-search/subreddit-search.component.ts","webpack:///./src/app/thread-detail-comment-flair/thread-detail-comment-flair.component.css","webpack:///./src/app/thread-detail-comment-flair/thread-detail-comment-flair.component.html","webpack:///./src/app/thread-detail-comment-flair/thread-detail-comment-flair.component.ts","webpack:///./src/app/thread-detail-comment/thread-detail-comment.component.css","webpack:///./src/app/thread-detail-comment/thread-detail-comment.component.html","webpack:///./src/app/thread-detail-comment/thread-detail-comment.component.ts","webpack:///./src/app/thread-detail-more/thread-detail-more.component.css","webpack:///./src/app/thread-detail-more/thread-detail-more.component.html","webpack:///./src/app/thread-detail-more/thread-detail-more.component.ts","webpack:///./src/app/thread-details/thread-details.component.css","webpack:///./src/app/thread-details/thread-details.component.html","webpack:///./src/app/thread-details/thread-details.component.ts","webpack:///./src/app/thread-media/thread-media.component.css","webpack:///./src/app/thread-media/thread-media.component.html","webpack:///./src/app/thread-media/thread-media.component.ts","webpack:///./src/app/thread-media/twitter/twitter.component.css","webpack:///./src/app/thread-media/twitter/twitter.component.html","webpack:///./src/app/thread-media/twitter/twitter.component.ts","webpack:///./src/app/thread/thread.component.css","webpack:///./src/app/thread/thread.component.html","webpack:///./src/app/thread/thread.component.ts","webpack:///./src/app/twitter.service.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".thread-list{\\n    padding-left: 0px;\\n    list-style-type: none;\\n}\\n\\n.thread-list li{\\n    margin-bottom: 10px;\\n    cursor: pointer;\\n}\\n\\n.refresh-button img{\\n    width: 20px;\\n}\"","module.exports = \"<h4>r/{{ activeSubName }}</h4>\\n<hr />\\n<div class='subredditActions'>\\n  <button \\n    class=\\\"btn btn-sm mr-2 refresh-button btn-outline-secondary\\\" \\n    (click)=\\\"refreshActive(activeSubName)\\\"\\n  ><img src=\\\"/assets/svg/loop-circular.svg\\\" alt=\\\"\\\"></button>\\n  <button *ngIf=\\\"isSubscribed\\\" class='btn btn-primary btn-sm' (click)=\\\"unsubscribe()\\\">Unsubscribe</button>\\n  <button *ngIf=\\\"! isSubscribed\\\" class='btn btn-primary btn-sm' (click)=\\\"subscribe()\\\">Subscribe</button>\\n</div>\\n<hr />\\n \\n<ul class=\\\"thread-list\\\" *ngIf=\\\"activeSub.children\\\">\\n  <li *ngFor=\\\"let thread of activeSub.children\\\" class=\\\"mt-2\\\">\\n    <app-thread [data]=\\\"thread.data\\\"></app-thread>\\n  </li>\\n</ul>   \\n\\n<div class=\\\"row mt-5 mb-5\\\">\\n  <div class=\\\"col-12\\\">\\n    <button class=\\\"btn btn-outline-secondary btn-block\\\" (click)=\\\"loadMore()\\\">LOAD MORE</button>\\n  </div>\\n</div>\\n \\n \"","import { Component, OnInit, Input } from '@angular/core';\nimport { RedditService } from \"../reddit.service\";\n\n@Component({\n  selector: 'app-active-subreddit',\n  templateUrl: './active-subreddit.component.html',\n  styleUrls: ['./active-subreddit.component.css']\n})\n\nexport class ActiveSubredditComponent implements OnInit {\n  @Input() activeSub : {\n    after: string,\n    children : any\n  };\n\n  @Input() refresh;\n  @Input() refreshActive : () => void;\n  @Input() activeSubName: string;\n  @Input() isSubscribed: boolean;\n\n  currentAfter : string;\n\n  constructor(\n    private redditService: RedditService\n  ) { }\n\n  ngOnInit() { \n    this.currentAfter = this.activeSub.after;\n  } \n\n  subscribe(){\n    this.redditService.subscribe(this.activeSubName).subscribe(response => this.refresh())\n  }\n\n  unsubscribe(){\n    this.redditService.unsubscribe(this.activeSubName).subscribe(response => this.refresh())\n  }\n\n  loadMore(){\n    this.redditService.loadMore(this.activeSubName, this.currentAfter).subscribe(response => {\n      let data = JSON.parse(response.toString()).data;\n      let newChildren = data.children\n      this.currentAfter = data.after;\n      this.activeSub.children = this.activeSub.children.concat(newChildren);\n    })\n  }\n}\n","module.exports = \".nav-link{\\n    cursor: pointer;\\n}\\n\\n.preloader{\\n    position: fixed;\\n    left: 50%;\\n    top: 50%;\\n    -webkit-transform: translateX(-50%) translateY(-50%);\\n            transform: translateX(-50%) translateY(-50%);\\n}\\n\\n.side-nav{\\n    position: relative;\\n}\\n\\n.fixed-nav{\\n    position: fixed;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    width: 100%;\\n    width: 16.666667%;\\n    padding-left: 15px;\\n    padding-right: 15px;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-2 pt-4 side-nav\\\">\\n      <div class=\\\"fixed-nav pt-4\\\">\\n        <h5>Welcome {{activeUser}}</h5>\\n        <app-subreddit-search [setActive]=\\\"passableGetSpecificSubreddit\\\"></app-subreddit-search>\\n        <hr />\\n        <h6>Your Subreddits</h6>\\n        <ul class='nav nav-pills flex-column'>\\n          <a class=\\\"nav-link\\\" (click)=\\\"loadFrontPage()\\\" [class.active]=\\\"activeSubName === 'front'\\\">Front Page</a>\\n          <a class='nav-link' *ngFor=\\\"let subs of subreddits\\\" (click)=\\\"getSpecificSubreddit(subs.data.display_name)\\\" [class.active]=\\\"subs.data.display_name === activeSubName\\\">\\n            {{ subs.data.display_name }}\\n          </a>\\n        </ul>\\n      </div>\\n    </div> \\n    <div class=\\\"col-10 pl-5 pr-5 pt-4\\\" *ngIf=\\\"activeSub\\\">\\n      <app-active-subreddit \\n        [activeSub]=\\\"activeSub\\\" \\n        [activeSubName]=\\\"activeSubName\\\"\\n        [isSubscribed]=\\\"subscribedToActive\\\"\\n        [refresh]=\\\"passableRefresh\\\"\\n        [refreshActive]=\\\"passableGetSpecificSubreddit\\\"\\n      >\\n      </app-active-subreddit>\\n    </div>      \\n\\n    <div class=\\\"col-10\\\" *ngIf=\\\"!activeSub\\\">\\n      <img class='preloader' src=\\\"/assets/preloader.gif\\\" alt=\\\"\\\" />\\n    </div>\\n  </div>\\n</div>   \"","import { Component } from '@angular/core';\nimport { UserService } from './user.service';\nimport { RedditService } from \"./reddit.service\";\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'app';\n  activeUser = null;\n  subreddits : [{\n    type: string,\n    data: {\n      display_name : string\n    }\n  }];\n  activeSub;\n  activeSubName : string;\n  subscribedToActive : boolean = false;\n  passableGetSpecificSubreddit : any;\n  passableRefresh : any;\n\n  constructor(\n    private userService : UserService,\n    private redditService : RedditService\n  ){}\n\n  ngOnInit(){\n    this.getUser();\n    this.getSubbredits();\n    this.loadFrontPage();\n\n    this.passableGetSpecificSubreddit = this.getSpecificSubreddit.bind(this);\n    this.passableRefresh = this.getSubbredits.bind(this);\n  }\n\n  loadFrontPage() : void {\n    this.activeSubName = \"front\";\n    this.activeSub = null;\n    \n    this.redditService.getFrontPage().subscribe(response => {\n      this.activeSub = JSON.parse(response.toString()).data;\n    })\n  }\n\n  getSubbredits() : void {\n    this.redditService.getSubbreddits().subscribe((response: Response) => {\n      this.subreddits = JSON.parse(response.toString()).data.children.sort((a, b) => {\n        return a.data.display_name.toLowerCase() > b.data.display_name.toLowerCase();\n      });\n    })\n  }\n\n  getSpecificSubreddit(name) : void{\n    this.activeSubName = name;\n    this.activeSub = null;\n\n    this.redditService.getSubredditDefault(name).subscribe((response: Response) => {\n      this.activeSub = JSON.parse(response.toString()).data;\n      this.subscribedToActive = this.subreddits.some(sub => sub.data.display_name === name);\n    })\n  }\n\n  getUser() : void {\n    this.userService.getUser().subscribe((response: Response) => {\n      this.activeUser = response\n    })\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HttpClientJsonpModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ActiveSubredditComponent } from './active-subreddit/active-subreddit.component';\nimport { ThreadComponent } from './thread/thread.component';\nimport { SubredditSearchComponent } from './subreddit-search/subreddit-search.component';\nimport { ThreadDetailsComponent } from './thread-details/thread-details.component';\nimport { ThreadDetailCommentComponent } from './thread-detail-comment/thread-detail-comment.component';\nimport { ThreadMediaComponent } from './thread-media/thread-media.component';\nimport { TwitterComponent } from './thread-media/twitter/twitter.component';\nimport { ThreadDetailMoreComponent } from './thread-detail-more/thread-detail-more.component';\nimport { ThreadDetailCommentFlairComponent } from './thread-detail-comment-flair/thread-detail-comment-flair.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ActiveSubredditComponent,\n    ThreadComponent,\n    SubredditSearchComponent,\n    ThreadDetailsComponent,\n    ThreadDetailCommentComponent,\n    ThreadMediaComponent,\n    TwitterComponent,\n    ThreadDetailMoreComponent,\n    ThreadDetailCommentFlairComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpClientJsonpModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RedditService {\n  private subredditUrl = \"http://localhost:9292/api/subreddits/\";\n  subreddits;\n  activeSubName;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getSubbreddits() {\n    return this.http.get(this.subredditUrl)\n  }\n\n  getSubredditDefault(sub){\n    this.activeSubName = sub;\n\n    return this.http.get(this.subredditUrl + `${sub}/hot`)\n  }\n\n  getActiveSubName(){\n    return this.activeSubName;\n  }\n\n  searchFor(name){\n    return this.http.get(`${this.subredditUrl}search/${name}`);\n  }\n\n  subscribe(name){\n    return this.http.get(`${this.subredditUrl}subscribe/${name}`);\n  }\n\n  unsubscribe(name){\n    return this.http.get(`${this.subredditUrl}unsubscribe/${name}`);\n  }\n\n  getThreadDetails(sub, id){\n    return this.http.get(`${this.subredditUrl}specific/${sub}/${id}`);\n  }\n\n  getFrontPage(){\n    return this.http.get(`${this.subredditUrl}front`);\n  }\n\n  loadMore(sub, page){\n    return this.http.get(`${this.subredditUrl}load/${sub}/${page}`);\n  }\n\n  loadMoreComments(linkId, children){\n    return this.http.get(`${this.subredditUrl}comments/${linkId}?children=${children.join(\",\")}`);\n  }\n}\n","module.exports = \".search-results{\\n    list-style-type: none;\\n    margin-left: 0px;\\n    padding-left: 0px;\\n}\\n\\n.search-result{\\n    cursor: pointer;\\n    padding-left: 6px;\\n    padding-top: 2px;\\n    padding-bottom: 2px;\\n}\\n\\n.search-result:hover{\\n    background-color: #cdcdcd;\\n    transition: all .2s ease;\\n    border-radius: 4px;\\n}\\n\\n.icon{\\n    height: 15px;\\n    cursor: pointer;\\n    margin-top: 2px;\\n}\\n\\n\"","module.exports = \"<div>\\n  <form class='form-inline mb-2'>\\n    <div class=\\\"input-group\\\">\\n      <input [(ngModel)]=\\\"searchTerm\\\" type=\\\"text\\\" placeholder=\\\"/r/query\\\" class='form-control' name=\\\"searchTerm\\\" />\\n      <div class=\\\"input-group-append\\\">\\n        <button (click)=\\\"runSearch()\\\" class='btn btn-primary'>Search</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\\n<div *ngIf=\\\"searchResults\\\">\\n  <h6>Search Results <img src=\\\"/assets/svg/circle-x.svg\\\" class='icon float-right' alt=\\\"\\\" (click)=\\\"closeResults()\\\"></h6>\\n  <ul class=\\\"search-results\\\">\\n    <li \\n      class='search-result' \\n      *ngFor=\\\"let result of searchResults\\\"\\n      (click)=\\\"setActiveSub(result)\\\"\\n    >\\n      <small>{{ result }}</small>\\n    </li> \\n  </ul> \\n</div>\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { RedditService } from \"../reddit.service\";\n\n@Component({\n  selector: 'app-subreddit-search',\n  templateUrl: './subreddit-search.component.html',\n  styleUrls: ['./subreddit-search.component.css']\n})\n\nexport class SubredditSearchComponent implements OnInit {\n  @Input() setActive: any\n\n  searchTerm: string;\n  searchResults : string[];\n\n  constructor(\n    private redditService : RedditService\n  ) { }\n \n  ngOnInit() {}\n\n  runSearch(){\n    let searchResults: object = this.redditService.searchFor(this.searchTerm).subscribe((response) => {\n      this.searchResults = JSON.parse(response.toString()).names;\n    });\n  } \n\n  closeResults(){\n    this.searchResults = null;\n  }\n\n  setActiveSub(subName){\n    this.setActive(subName)\n  }\n}\n","module.exports = \".flair{\\n    background-color: #cdcdcd;\\n    border-radius: 2px;\\n    margin-left: 8px;\\n    font-size: 12px;\\n    line-height: 22px;\\n    padding: 2px;\\n    padding-left: 6px;\\n    padding-right: 6px;\\n}\"","module.exports = \"<span class='flair'>{{ data }}</span>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-thread-detail-comment-flair',\n  templateUrl: './thread-detail-comment-flair.component.html',\n  styleUrls: ['./thread-detail-comment-flair.component.css']\n})\n\nexport class ThreadDetailCommentFlairComponent implements OnInit {\n  @Input() data : string;\n\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n}\n","module.exports = \"[class*=depth]{\\n    padding-left: 10px;\\n    border-left: 2px solid #333;\\n    padding-top: 4px;\\n    padding-bottom: 4px;\\n}\\n\\n.depth-0{\\n    border-left: 4px solid #333;\\n    margin-bottom: 10px;\\n    background-color: rgba(100, 100, 100, .05);\\n    padding-left: 15px;\\n    padding-right: 15px;\\n}\\n\\n.comment{\\n    font-size: 14px;\\n    line-height: 22px;\\n    width: 100%;\\n    position: relative;\\n    padding-right: 85px;\\n}\\n\\n.comment p{ \\n    margin-bottom: 0px;\\n}\\n\\n.comment .comment{\\n    position: static;\\n}\\n\\n.fixed-right{\\n    position: absolute;\\n    right: 15px;\\n}\\n\\n.collapse{\\n    cursor: pointer;\\n    width: 14px;\\n    display: inline-block;\\n    margin-right: 8px;\\n}\\n\\n.collapse-expand{\\n    top: 4px;\\n}\\n\\n.load-more-comment{\\n    cursor: pointer;\\n}\\n\\n.depth-1{\\n    border-color: rgba(123, 12, 184, 1);\\n}\\n\\n.depth-2{\\n    border-color: rgba(12, 123, 184, 1);\\n}\"","module.exports = \"<div class='comment depth-{{data.depth}}' *ngIf=\\\"! collapsed\\\">\\n  <strong *ngIf=\\\"data.author\\\">\\n    {{ data.author }} \\n    <app-thread-detail-comment-flair *ngIf=\\\"data.author_flair_text\\\" [data]=\\\"data.author_flair_text\\\"></app-thread-detail-comment-flair>\\n  </strong>\\n  <strong *ngIf=\\\"!data.author\\\">[deleted]</strong>\\n\\n  <div class=\\\"fixed-right\\\">\\n    <img class='collapse' src=\\\"/assets/svg/fullscreen-exit.svg\\\" alt=\\\"\\\" (click)=\\\"collapse()\\\">\\n\\n    <span *ngIf=\\\"data.score\\\">[{{data.score}}]</span>\\n    <span *ngIf=\\\"!data.score\\\">[-]</span>\\n  </div>\\n\\n  <p *ngIf=\\\"!data.body_html\\\">[deleted]</p>\\n  <p *ngIf=\\\"data.body_html\\\" [innerHTML]=\\\"data.body_html\\\"></p>\\n\\n  <div class='comment-children' *ngIf=\\\"data.replies !== undefined\\\">\\n    <div *ngIf=\\\"data.replies\\\">\\n      <div *ngFor=\\\"let child of data.replies.data.children\\\">\\n        <app-thread-detail-comment *ngIf=\\\"child.kind !== 'more'\\\" [data]=\\\"child.data\\\"></app-thread-detail-comment>\\n        <app-thread-detail-more *ngIf=\\\"child.kind === 'more'\\\" [loadMore]=\\\"passableLoadMore\\\" [data]=\\\"child.data\\\"></app-thread-detail-more>\\n      </div>\\n    </div> \\n  </div> \\n</div>\\n\\n<div class='comment depth-{{data.depth}}' *ngIf=\\\"collapsed\\\">\\n  <strong *ngIf=\\\"data.author\\\">\\n    <em>[hidden]</em>\\n  </strong>\\n\\n  <div class=\\\"fixed-right collapse-expand\\\">\\n    <img class='collapse' src=\\\"/assets/svg/fullscreen-enter.svg\\\" alt=\\\"\\\" (click)=\\\"collapse()\\\">\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { RedditService } from \"../reddit.service\";\n\n@Component({\n  selector: 'app-thread-detail-comment',\n  templateUrl: './thread-detail-comment.component.html',\n  styleUrls: ['./thread-detail-comment.component.css']\n})\nexport class ThreadDetailCommentComponent implements OnInit {\n  @Input() data : {\n    body_html : string,\n    depth: number,\n    author: string,\n    score: number,\n    link_id: string,\n    replies: {\n      data: {\n        children: {\n          data: object\n        }[]\n      }\n    }\n  }\n\n  collapsed : boolean = false;\n  passableLoadMore : () => void;\n \n  constructor(\n    private redditService: RedditService\n  ) { }\n\n  ngOnInit() { \n    this.passableLoadMore = this.loadMore.bind(this);\n  }\n\n  collapse(){\n    this.collapsed = ! this.collapsed;\n  }\n\n  loadMore(children){\n    this.redditService.loadMoreComments(this.data.link_id, children).subscribe((data : any) => {\n      data = JSON.parse(data).json;\n      if( data.data ){\n        data = data.data.things;\n        this.data.replies.data.children.pop()\n        this.data.replies.data.children = this.data.replies.data.children.concat(data)\n      }\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class='comment depth-{{data.depth}} load-more-comment'>\\n  <strong (click)=\\\"loadMore(data.children)\\\">Load More Comments</strong>\\n</div>\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-thread-detail-more',\n  templateUrl: './thread-detail-more.component.html',\n  styleUrls: ['./thread-detail-more.component.css']\n})\nexport class ThreadDetailMoreComponent implements OnInit {\n  @Input() loadMore: () => void;\n  @Input() data : {\n    name: string,\n    depth: number,\n    count: number,\n    parent_id: number,\n    id: number\n  };\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n","module.exports = \".thread-overlay{\\n    position: fixed;\\n    top: 0;\\n    bottom: 0;\\n    right: 0;\\n    left: 10%;\\n    background-color: rgba(255, 255, 255, .95);\\n    overflow-y: scroll;\\n    z-index: 999;\\n    border-left: 2px solid rgba(0,0,0,.5);\\n}\\n\\n.icon{\\n    width: 15px;\\n    margin-right: 4px;\\n}\\n\\n.thread-text{\\n    font-size: 16px;\\n    line-height: 24px;\\n    border-bottom: 1px solid #cdcdcd;\\n    padding-top: 15px;\\n    padding-bottom: 15px;\\n}\\n\\n.arrow-icon {\\n  width: 24px;\\n  cursor: pointer;\\n}\\n\\n.collapse-icon{\\n    width: 24px;\\n    cursor: pointer;\\n}\\n\\n.refresh-icon{\\n    width: 24px;\\n}\\n\\n.span-row{\\n    width: 100%;\\n}\"","module.exports = \"<div class='thread-overlay' *ngIf=\\\"threadDetails\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row pt-4 pb-4\\\">\\n      <div class=\\\"col-12\\\">\\n        <h3>{{ threadDetails.title }}</h3>\\n      </div>\\n      <div class=\\\"col-12\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-1\\\">\\n            <img src=\\\"/assets/svg/arrow-thick-left.svg\\\" class='arrow-icon icon' (click)=\\\"close()\\\"/>\\n          </div>\\n          <div class=\\\"col-2\\\">\\n            <img src=\\\"/assets/svg/comment-square.svg\\\" class='comment-icon icon' alt=\\\"\\\"> {{ threadDetails.num_comments }}\\n          </div>\\n          <div class=\\\"col-1\\\">\\n            <img src=\\\"/assets/svg/loop-circular.svg\\\" alt=\\\"\\\" class='refresh-icon icon' (click)=\\\"refreshFeed()\\\"/>\\n          </div>\\n          <div class=\\\"col-6\\\"></div>\\n          <div class=\\\"col-1\\\">\\n            <img src=\\\"/assets/svg/fullscreen-exit.svg\\\" alt=\\\"\\\" class=\\\"collapse-icon icon\\\" (click)=\\\"toggleText()\\\">\\n          </div>\\n          <div class=\\\"col-1\\\">\\n            <img src=\\\"/assets/svg/arrow-thick-right.svg\\\" class='arrow-icon icon' (click)=\\\"redirect('http://old.reddit.com/' + threadDetails.permalink)\\\" />\\n          </div>\\n        </div>\\n      </div>\\n     \\n      <div class=\\\"media col-12\\\" *ngIf=\\\"threadDetails.media\\\">\\n        <div class=\\\"row span-row\\\">\\n          <app-thread-media class=\\\"col-12\\\" [media]=\\\"threadDetails.media\\\"></app-thread-media>\\n        </div>        \\n      </div>\\n\\n      <div class=\\\"col-12\\\" *ngIf=\\\"threadDetails.selftext_html\\\">\\n        <hr />\\n        <p class='thread-text' *ngIf=\\\"! collapsed\\\" [innerHTML]=\\\"threadDetails.selftext_html\\\"></p>\\n      </div>\\n    </div>   \\n   \\n    <div class=\\\"row\\\" *ngFor=\\\"let comment of comments\\\">\\n      <app-thread-detail-comment class='col-12' [data]=\\\"comment.data\\\"></app-thread-detail-comment>\\n    </div>\\n  </div>  \\n</div> \\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { RedditService } from \"../reddit.service\";\n@Component({\n  selector: 'app-thread-details',\n  templateUrl: './thread-details.component.html',\n  styleUrls: ['./thread-details.component.css']\n})\nexport class ThreadDetailsComponent implements OnInit {\n  @Input() id : String;\n  @Input() sub : String;\n  @Input() close : () => void;\n\n  private fullData : Object;\n  threadDetails: {\n    title : string,\n    num_comments: number,\n    selftext_html: string,\n    permalink: string,\n    media: object,\n    url: string\n  };\n\n  comments: [{\n    data : Object[]\n  }];\n\n  collapsed : boolean = false;\n\n  constructor(\n    private redditService : RedditService\n  ) { }\n\n  redirect(link){\n    window.open(link);\n  }\n\n  refreshFeed(){\n    this.load();\n  }\n\n  toggleText(){\n    this.collapsed = ! this.collapsed;\n  }\n\n  load(){\n    this.redditService.getThreadDetails(this.sub, this.id).subscribe(response => {\n      this.fullData = JSON.parse(response.toString());\n\n      this.threadDetails = this.fullData[0].data.children[0].data;\n      \n      if( this.threadDetails.url.includes(\"twitter.com\") ){\n        this.threadDetails.media = {\n          type: \"twitter.com\",\n          url: this.threadDetails.url\n        }\n      }\n      console.log(this.threadDetails);\n      this.comments = this.fullData[1].data.children;\n    })\n  }\n\n  ngOnInit() {\n    this.load();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-12\\\">\\n  <hr />\\n    <div *ngIf=\\\"media.type === 'streamable.com'\\\" [innerHTML]=\\\"embed\\\"></div>\\n    <app-twitter *ngIf=\\\"media.type === 'twitter.com'\\\" [url]=\\\"embed\\\"></app-twitter>\\n  <hr />\\n</div> \"","import { Component, OnInit, Input } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-thread-media',\n  templateUrl: './thread-media.component.html',\n  styleUrls: ['./thread-media.component.css']\n})\n\nexport class ThreadMediaComponent implements OnInit {\n  @Input() media : {\n    type: string,\n    url: string,\n    oembed: {\n      html: string\n    }\n  };\n\n  embed : SafeUrl;\n\n  constructor(\n    private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n    console.log(this.media);\n    switch( this.media.type ){\n      case \"streamable.com\":\n        this.embed = this.sanitizer.bypassSecurityTrustHtml(\n          this.media.oembed.html.replace(`width=\"600\"`, `width=\"1200\"`).replace(`height=\"338\"`, `height=\"676\"`)\n        )\n      break;\n\n      case \"twitter.com\":\n        this.embed = this.media.url.replace(`mobile.`, '')\n      break;\n    }\n  }\n}\n\n\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"embed\\\" [innerHTML]=\\\"embedHtml\\\"></div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TwitterService } from \"../../twitter.service\";\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-twitter',\n  templateUrl: './twitter.component.html',\n  styleUrls: ['./twitter.component.css']\n})\nexport class TwitterComponent implements OnInit {\n  @Input() url : string;\n\n  embed : {\n    author_name: string,\n    author_url: string,\n    cache_age: string,\n    height: any,\n    html: string,\n    provider_name: string,\n    provider_url: string,\n    type: string,\n    url: string,\n    version: string,\n    width: number\n  };\n\n  embedHtml : SafeUrl;\n\n  constructor(\n    private twitterService : TwitterService,\n    private sanitizer : DomSanitizer\n  ) { }\n\n  ngOnInit() {\n    this.fetch();\n  }\n\n  fetch(){\n    this.twitterService.fetchTweet( this.url ).subscribe((data : string) => {\n      this.embed = JSON.parse(data);\n      this.embedHtml = this.sanitizer.bypassSecurityTrustHtml(this.embed.html)\n    })\n  }\n}\n","module.exports = \".icon{\\n    margin-right: 10px;\\n    height: 15px;\\n}\\n\\nh6{\\n    padding-left: 60px;\\n    padding-right: 80px;\\n    position: relative;\\n}\\n\\n.fixed-left{\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n}\\n\\n.fixed-right{\\n    position: absolute;\\n    right: 0;\\n    top: 0;\\n}\\n\\np{\\n    font-size: 14px;\\n    line-height: 22px;\\n    font-weight: light;\\n    background-color: #efefef;\\n    padding: 12px;\\n}\"","module.exports = \"<h6>\\n    <img *ngIf=\\\"! textVisible\\\" class='icon expand-icon fixed-left' src=\\\"/assets/svg/arrow-bottom.svg\\\" alt=\\\"\\\" (click)=\\\"toggleText()\\\" />\\n    <img *ngIf=\\\"textVisible\\\" class='icon expand-icon fixed-left' src=\\\"/assets/svg/arrow-top.svg\\\" alt=\\\"\\\" (click)=\\\"toggleText()\\\" />\\n\\n    <a (click)=\\\"getThread()\\\">{{ data.title }}\\n        <span class='fixed-right'>({{data.num_comments}})</span>\\n    </a>\\n\\n</h6>\\n<p *ngIf=\\\"textVisible\\\" [innerHTML]=\\\"data.selftext_html\\\"></p>       \\n\\n<div *ngIf=\\\"threadVisible\\\">\\n    <app-thread-details [id]=\\\"data.id\\\" [sub]=\\\"data.subreddit\\\" [close]=\\\"passableClose\\\" ></app-thread-details>\\n</div>     \"","import { Component, OnInit, Input } from '@angular/core';\nimport { RedditService } from '../reddit.service';\n\n@Component({\n  selector: 'app-thread',\n  templateUrl: './thread.component.html',\n  styleUrls: ['./thread.component.css']\n})\n\nexport class ThreadComponent implements OnInit {\n  @Input() data: {\n    title: String,\n    permalink: String,\n    selftext_html: String,\n    id : String,\n    subreddit: String,\n    num_comments: Number\n  }\n\n  textVisible: boolean = false;\n  threadVisible: boolean = false;\n  passableClose: any;\n\n  constructor() {  }\n\n  ngOnInit() {\n    //console.log(this.data);\n\n    this.passableClose = this.closeThread.bind(this);\n  }\n\n  closeThread(){\n    this.threadVisible = false;\n  }\n\n  toggleText(){\n    this.textVisible = ! this.textVisible;\n  }\n\n  getThread(){\n    this.threadVisible = true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TwitterService {\n  baseUrl: string = \"/twitter/\"\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  fetchTweet(url){\n    return this.http.get(`${this.baseUrl}?url=${url}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n  private userUrl = \"http://localhost:9292/api/user/\";\n  user;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n \n  getUser (){\n    return this.http.get(this.userUrl)\n  }  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}